{"version":3,"sources":["webpack:///./assets/js/theme/brands.js","webpack:///./assets/js/theme/roots/brands.js","webpack:///./assets/js/theme/common/url-utils.js","webpack:///./assets/js/theme/catalog.js"],"names":["Brands","onReady","$","length","addClass","CatalogPage","urlUtils","getUrl","window","location","pathname","search","goToUrl","url","history","pushState","document","title","trigger","replaceParams","params","param","parsed","Url","parse","hasOwnProperty","query","format","buildQueryString","queryData","key","out","Array","isArray","ndx","substring","parseQueryParams","i","temp","split","push","onSortBySubmit","event","href","queryParams","currentTarget","serialize","page","preventDefault","PageManager"],"mappings":"2KAGqBA,E,gLACjBC,QAAA,WCAIC,IAAE,mEAAmEC,OAAS,GAC9ED,IAAE,kCAAkCE,SAAS,qB,GDFjBC,M,uFED9BC,EAAW,CACbC,OAAQ,oBAASC,OAAOC,SAASC,SAAWF,OAAOC,SAASE,QAE5DC,QAAS,SAACC,GACNL,OAAOM,QAAQC,UAAU,GAAIC,SAASC,MAAOJ,GAC7CX,EAAEM,QAAQU,QAAQ,gBAGtBC,cAAe,SAACN,EAAKO,GACjB,IACIC,EADEC,EAASC,IAAIC,MAAMX,GAAK,GAM9B,IAAKQ,KAFLC,EAAOX,OAAS,KAEFS,EACNA,EAAOK,eAAeJ,KACtBC,EAAOI,MAAML,GAASD,EAAOC,IAIrC,OAAOE,IAAII,OAAOL,IAGtBM,iBAAkB,SAACC,GACf,IACIC,EADAC,EAAM,GAEV,IAAKD,KAAOD,EACR,GAAIA,EAAUJ,eAAeK,GACzB,GAAIE,MAAMC,QAAQJ,EAAUC,IAAO,CAC/B,IAAII,OAAG,EAEP,IAAKA,KAAOL,EAAUC,GACdD,EAAUC,GAAKL,eAAeS,KAC9BH,GAAO,IAAID,EAAR,IAAeD,EAAUC,GAAKI,SAIzCH,GAAO,IAAID,EAAR,IAAeD,EAAUC,GAKxC,OAAOC,EAAII,UAAU,IAGzBC,iBAAkB,SAACP,GAGf,IAFA,IAAMT,EAAS,GAENiB,EAAI,EAAGA,EAAIR,EAAU1B,OAAQkC,IAAK,CACvC,IAAMC,EAAOT,EAAUQ,GAAGE,MAAM,KAE5BD,EAAK,KAAMlB,EACPY,MAAMC,QAAQb,EAAOkB,EAAK,KAC1BlB,EAAOkB,EAAK,IAAIE,KAAKF,EAAK,IAE1BlB,EAAOkB,EAAK,IAAM,CAAClB,EAAOkB,EAAK,IAAKA,EAAK,IAG7ClB,EAAOkB,EAAK,IAAMA,EAAK,GAI/B,OAAOlB,IAIAd,Q,yJCjEMD,E,gLACjBoC,eAAA,SAAeC,GACX,IAAM7B,EAAMU,IAAIC,MAAMhB,OAAOC,SAASkC,MAAM,GACtCC,EAAc1C,EAAEwC,EAAMG,eAAeC,YAAYP,MAAM,KAE7D1B,EAAIa,MAAMkB,EAAY,IAAMA,EAAY,UACjC/B,EAAIa,MAAMqB,KAEjBL,EAAMM,iBACNxC,OAAOC,SAAWc,IAAII,OAAO,CAAEjB,SAAUG,EAAIH,SAAUC,OAAQL,IAASsB,iBAAiBf,EAAIa,U,GAT5DuB,O","file":"theme-bundle.chunk.13.js","sourcesContent":["import CatalogPage from './catalog';\nimport rootsLoaded from './roots/brands';\n\nexport default class Brands extends CatalogPage {\n    onReady() {\n        rootsLoaded();\n    }\n}\n","import $ from 'jquery';\n\nexport default function loaded() {\n    // subcategory display\n    if ($('.page-content-subcategories .image-wrap:not(.image-placeholder)').length > 0) {\n        $('.page-content-subcategories ul').addClass('subcategory-grid');\n    }\n}\n","import Url from 'url';\n\nconst urlUtils = {\n    getUrl: () => `${window.location.pathname}${window.location.search}`,\n\n    goToUrl: (url) => {\n        window.history.pushState({}, document.title, url);\n        $(window).trigger('statechange');\n    },\n\n    replaceParams: (url, params) => {\n        const parsed = Url.parse(url, true);\n        let param;\n\n        // Let the formatter use the query object to build the new url\n        parsed.search = null;\n\n        for (param in params) {\n            if (params.hasOwnProperty(param)) {\n                parsed.query[param] = params[param];\n            }\n        }\n\n        return Url.format(parsed);\n    },\n\n    buildQueryString: (queryData) => {\n        let out = '';\n        let key;\n        for (key in queryData) {\n            if (queryData.hasOwnProperty(key)) {\n                if (Array.isArray(queryData[key])) {\n                    let ndx;\n\n                    for (ndx in queryData[key]) {\n                        if (queryData[key].hasOwnProperty(ndx)) {\n                            out += `&${key}=${queryData[key][ndx]}`;\n                        }\n                    }\n                } else {\n                    out += `&${key}=${queryData[key]}`;\n                }\n            }\n        }\n\n        return out.substring(1);\n    },\n\n    parseQueryParams: (queryData) => {\n        const params = {};\n\n        for (let i = 0; i < queryData.length; i++) {\n            const temp = queryData[i].split('=');\n\n            if (temp[0] in params) {\n                if (Array.isArray(params[temp[0]])) {\n                    params[temp[0]].push(temp[1]);\n                } else {\n                    params[temp[0]] = [params[temp[0]], temp[1]];\n                }\n            } else {\n                params[temp[0]] = temp[1];\n            }\n        }\n\n        return params;\n    },\n};\n\nexport default urlUtils;\n","import PageManager from './page-manager';\nimport urlUtils from './common/url-utils';\nimport Url from 'url';\n\nexport default class CatalogPage extends PageManager {\n    onSortBySubmit(event) {\n        const url = Url.parse(window.location.href, true);\n        const queryParams = $(event.currentTarget).serialize().split('=');\n\n        url.query[queryParams[0]] = queryParams[1];\n        delete url.query.page;\n\n        event.preventDefault();\n        window.location = Url.format({ pathname: url.pathname, search: urlUtils.buildQueryString(url.query) });\n    }\n}\n"],"sourceRoot":""}